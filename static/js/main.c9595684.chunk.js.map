{"version":3,"sources":["utils/fetchClient.ts","types/Filter.ts","сomponents/Login.tsx","api/todos.ts","сomponents/AddTodo.tsx","сomponents/TodosFilter.tsx","сomponents/TodoItem.tsx","сomponents/TodoList.tsx","App.tsx","utils/getUser.ts","index.tsx"],"names":["BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","Error","json","Filter","client","Login","setUser","showError","useState","email","setEmail","className","onSubmit","event","preventDefault","createUser","res","localStorage","setItem","catch","htmlFor","type","id","placeholder","required","value","onChange","target","AddTodo","filteredTodosCount","todos","createTodo","changeTodo","setError","title","setTitle","disableInput","setDisableInput","aria-label","classNames","active","every","item","completed","onClick","isAnyActive","some","forEach","todo","newTitle","trim","finally","disabled","TodosFilter","status","onChangeStatus","deleteTodo","activeTodos","reduce","sum","haveCompleted","Object","values","map","href","all","toLowerCase","cn","selected","hidden","filter","TodoItem","todosIdInLoading","loading","setLoading","editingTodo","setEditingTodo","editTitle","setEditTitle","titleField","useRef","useEffect","includes","current","focus","handleSubmit","onDoubleClick","ref","onBlur","onKeyDown","key","TodoList","tempTodo","data-cy","TransitionGroup","CSSTransition","timeout","App","getItem","defaultData","parse","getUser","user","setTodos","filteredTodos","setFilteredTodos","setTempTodo","errorMessage","setErrorMessage","filterStatus","setFilterStatus","setTodosIdInLoading","message","timeoutID","clearTimeout","userId","todoService","updated","curentTodos","todoId","length","newTodo","root","document","getElementById","render"],"mappings":"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","file":"static/js/main.c9595684.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'https://mate.academy/students-api';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null,\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","export enum Filter {\n  all = 'All',\n  active = 'Active',\n  completed = 'Completed',\n}\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport { createUser } from '../api/todos';\nimport { User } from '../types/User';\n\ntype Props = {\n  setUser: (userId: User) => void;\n  showError: (error: string) => void;\n};\n\nexport const Login: React.FC<Props> = ({ setUser, showError }) => {\n  const [email, setEmail] = useState('');\n\n  const hadleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    createUser(email)\n      .then((res) => {\n        setEmail('');\n        setUser(res);\n        localStorage.setItem('user', JSON.stringify(res));\n      })\n      .catch(() => showError('Something wrong, try again later'));\n  };\n\n  return (\n    <form className=\"box mt-5\" onSubmit={hadleSubmit}>\n      <h1 className=\"title is-3\">Log in to open todos</h1>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"user-email\">\n          Email\n        </label>\n\n        <div className=\"control has-icons-left\">\n          <input\n            type=\"email\"\n            id=\"user-email\"\n            className=\"input\"\n            placeholder=\"Enter your email\"\n            required\n            value={email}\n            onChange={(event) => setEmail(event.target.value)}\n          />\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n        </div>\n      </div>\n\n      <div className=\"field\">\n        <button type=\"submit\" className=\"button is-primary\">\n          Login\n        </button>\n      </div>\n    </form>\n  );\n};\n","import { Todo } from '../types/Todo';\nimport { User } from '../types/User';\nimport { client } from '../utils/fetchClient';\n\nexport const createUser = (email: string) => {\n  return client.post<User>(\n    '/users',\n    { email },\n  );\n};\n\nexport const getTodos = (userId: number) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\nexport const addTodo = (userId: number, title: string) => {\n  return client.post<Todo>(\n    '/todos',\n    { userId, title, completed: false },\n  );\n};\n\nexport const delTodo = (id: number) => {\n  return client.delete(`/todos/${id}`);\n};\n\nexport const updateTodo = ({ id, title, completed }: Todo) => {\n  return client.patch<Todo>(\n    `/todos/${id}`,\n    { title, completed },\n  );\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  filteredTodosCount: number;\n  todos: Todo[];\n  createTodo: (newTodo: string) => Promise<void>;\n  changeTodo: (todo: Todo) => void;\n  setError: (error: string) => void;\n};\n\nexport const AddTodo: React.FC<Props> = ({\n  filteredTodosCount,\n  todos,\n  createTodo,\n  changeTodo,\n  setError,\n}) => {\n  const [title, setTitle] = useState('');\n  const [disableInput, setDisableInput] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    setDisableInput(true);\n    const newTitle = title.trim();\n\n    if (!newTitle) {\n      setError(\"Title can't be empty\");\n      setDisableInput(false);\n      setTitle('');\n\n      return;\n    }\n\n    createTodo(newTitle)\n      .finally(() => {\n        setDisableInput(false);\n        setTitle('');\n      });\n  };\n\n  const handleToggleAll = () => {\n    const isAnyActive = todos.some(item => !item.completed);\n\n    todos.forEach(todo => {\n      if (todo.completed !== isAnyActive) {\n        changeTodo({ ...todo, completed: isAnyActive });\n      }\n    });\n  };\n\n  return (\n    <header className=\"todoapp__header\">\n      {!!filteredTodosCount && (\n        <button\n          type=\"button\"\n          aria-label=\"Toggle all Todo selected\"\n          className={classNames(\n            'todoapp__toggle-all',\n            { active: todos.every(item => item.completed) },\n          )}\n          onClick={handleToggleAll}\n        />\n      )}\n\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"todoapp__new-todo\"\n          placeholder=\"What needs to be done?\"\n          disabled={disableInput}\n          value={title}\n          onChange={(event) => setTitle(event.target.value)}\n        />\n      </form>\n    </header>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Filter } from '../types/Filter';\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  status: string;\n  onChangeStatus: (filterStatus: string) => void;\n  todos: Todo[];\n  deleteTodo: (id: number) => void;\n};\n\nexport const TodosFilter: React.FC<Props> = ({\n  status,\n  onChangeStatus,\n  todos,\n  deleteTodo,\n}) => {\n  const activeTodos = todos.reduce((sum, todo) => sum + +!todo.completed, 0);\n  const haveCompleted = todos.some(todo => todo.completed === true);\n\n  const handleClearCompleted = () => {\n    todos\n      .filter(todo => todo.completed)\n      .forEach(todo => deleteTodo(todo.id));\n  };\n\n  return (\n    <footer className=\"todoapp__footer\">\n      <span className=\"todo-count\">\n        {`${activeTodos} items left`}\n      </span>\n\n      <nav className=\"filter\">\n        {Object.values(Filter).map(item => (\n          <a\n            key={item}\n            href={item !== Filter.all ? `#/${item.toLowerCase()}` : '#/'}\n            className={cn('filter__link', { selected: status === item })}\n            onClick={() => onChangeStatus(item)}\n          >\n            {item}\n          </a>\n        ))}\n      </nav>\n\n      <button\n        type=\"button\"\n        className={cn('todoapp__clear-completed', { hidden: !haveCompleted })}\n        onClick={handleClearCompleted}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useEffect, useState, useRef } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  todosIdInLoading?: number[];\n  changeTodo?: (todo: Todo) => void;\n  deleteTodo?: (id: number) => void;\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  todosIdInLoading = [0],\n  changeTodo = () => { },\n  deleteTodo = () => { },\n}) => {\n  const { id, title, completed } = todo;\n  const [loading, setLoading] = useState(false);\n  const [editingTodo, setEditingTodo] = useState(false);\n  const [editTitle, setEditTitle] = useState(title);\n  const titleField = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    setLoading(todosIdInLoading.includes(id));\n  }, [todosIdInLoading]);\n\n  useEffect(() => {\n    if (titleField.current && editingTodo) {\n      titleField.current.focus();\n    }\n  }, [editingTodo]);\n\n  const handleChange = () => {\n    changeTodo({\n      ...todo,\n      completed: !completed,\n    });\n  };\n\n  const handleSubmit = () => {\n    const newTitle = editTitle.trim();\n\n    if (!newTitle) {\n      deleteTodo(id);\n    }\n\n    if (newTitle && newTitle !== title) {\n      changeTodo({\n        ...todo,\n        title: newTitle,\n      });\n      setEditTitle(newTitle);\n    }\n\n    setEditingTodo(false);\n  };\n\n  const handleOnKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Escape') {\n      setEditTitle(title);\n      setEditingTodo(false);\n    }\n\n    if (event.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n\n  return (\n    <div className={classNames('todo', { completed })}>\n      <label className=\"todo__status-label\">\n        <input\n          type=\"checkbox\"\n          className=\"todo__status\"\n          onChange={handleChange}\n        />\n      </label>\n\n      {!editingTodo && (\n        <>\n          <span\n            className=\"todo__title\"\n            onDoubleClick={() => setEditingTodo(true)}\n          >\n            {title}\n          </span>\n\n          <button\n            type=\"button\"\n            className=\"todo__remove\"\n            onClick={() => deleteTodo(todo.id)}\n          >\n            ×\n          </button>\n        </>\n      )}\n\n      {editingTodo && (\n        <form>\n          <input\n            type=\"text\"\n            ref={titleField}\n            className=\"todo__title-field\"\n            placeholder=\"Empty todo will be deleted\"\n            value={editTitle}\n            onChange={(event) => setEditTitle(event.target.value)}\n            onBlur={handleSubmit}\n            onKeyDown={handleOnKeyDown}\n          />\n        </form>\n      )}\n\n      <div className={classNames(\n        'modal overlay',\n        { 'is-active': loading },\n      )}\n      >\n        <div className=\"modal-background has-background-white-ter\" />\n        <div className=\"loader\" />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { Todo } from '../types/Todo';\nimport { TodoItem } from './TodoItem';\n\ntype Props = {\n  todos: Todo[];\n  tempTodo: Todo | null;\n  changeTodo: (todo: Todo) => void;\n  todosIdInLoading: number[];\n  deleteTodo: (id: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  tempTodo,\n  changeTodo,\n  todosIdInLoading,\n  deleteTodo,\n}) => {\n  return (\n    <section className=\"todoapp__main\" data-cy=\"TodoList\">\n      <TransitionGroup>\n        {todos.map(todo => (\n          <CSSTransition\n            key={todo.id}\n            timeout={300}\n            classNames=\"item\"\n          >\n            <TodoItem\n              todo={todo}\n              todosIdInLoading={todosIdInLoading}\n              changeTodo={changeTodo}\n              deleteTodo={deleteTodo}\n            />\n          </CSSTransition>\n        ))}\n\n        {tempTodo && (\n          <CSSTransition\n            key={0}\n            timeout={300}\n            classNames=\"temp-item\"\n          >\n            <TodoItem\n              todo={tempTodo}\n            />\n          </CSSTransition>\n        )}\n      </TransitionGroup>\n    </section>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\n\nimport { Login } from './сomponents/Login';\nimport { AddTodo } from './сomponents/AddTodo';\nimport { TodosFilter } from './сomponents/TodosFilter';\nimport { TodoList } from './сomponents/TodoList';\nimport * as todoService from './api/todos';\nimport { Todo } from './types/Todo';\nimport { Filter } from './types/Filter';\nimport { getUser } from './utils/getUser';\n\nexport const App: React.FC = () => {\n  const [user, setUser] = useState(getUser());\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>([]);\n  const [tempTodo, setTempTodo] = useState<Todo | null>(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [filterStatus, setFilterStatus] = useState<string>(Filter.all);\n  const [todosIdInLoading, setTodosIdInLoading] = useState<number[]>([]);\n\n  const showError = (message: string) => {\n    setErrorMessage(message);\n    const timeoutID = setTimeout(() => setErrorMessage(''), 3000);\n\n    return () => clearTimeout(timeoutID);\n  };\n\n  useEffect(() => {\n    if (user.id) {\n      todoService.getTodos(user.id)\n        .then(setTodos)\n        .catch(() => showError('Unable to load a todos'));\n    }\n  }, [user]);\n\n  const createTodo = (newTitle: string) => {\n    const tempTodoId = 0;\n\n    setTempTodo({\n      id: tempTodoId,\n      userId: user.id,\n      title: newTitle,\n      completed: false,\n    });\n\n    setTodosIdInLoading(current => [...current, tempTodoId]);\n\n    return todoService.addTodo(user.id, newTitle)\n      .then(newTodo => {\n        setTodos(curentTodos => [...curentTodos, newTodo]);\n      })\n      .catch(() => {\n        showError('Unable to add a todos');\n      })\n      .finally(() => {\n        setTempTodo(null);\n        setTodosIdInLoading(current => current.filter(id => id !== 0));\n      });\n  };\n\n  const changeTodo = (todo: Todo) => {\n    setTodosIdInLoading(current => [...current, todo.id]);\n\n    todoService.updateTodo(todo)\n      .then(updated => {\n        setTodos(current => current\n          .map(item => (item.id === updated.id ? updated : item)));\n      })\n      .catch(() => {\n        showError('Unable to update a todos');\n      })\n      .finally(() => setTodosIdInLoading(\n        current => current.filter(id => id !== todo.id),\n      ));\n  };\n\n  const deleteTodo = (id: number) => {\n    setTodosIdInLoading(current => [...current, id]);\n\n    todoService.delTodo(id)\n      .then(() => {\n        setTodos(curentTodos => curentTodos.filter(todo => todo.id !== id));\n      })\n      .catch(() => {\n        showError('Unable to delete a todos');\n      })\n      .finally(() => setTodosIdInLoading(\n        current => current.filter(todoId => todoId !== id),\n      ));\n  };\n\n  useEffect(() => {\n    switch (filterStatus) {\n      case Filter.active:\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n\n      case Filter.completed:\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n\n      case Filter.all:\n      default:\n        setFilteredTodos([...todos]);\n    }\n  }, [filterStatus, todos]);\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n\n      {!user.id && <Login setUser={setUser} showError={showError} />}\n\n      {!!user.id && (\n        <div className=\"todoapp__content\">\n          <AddTodo\n            filteredTodosCount={filteredTodos.length}\n            todos={todos}\n            createTodo={createTodo}\n            changeTodo={changeTodo}\n            setError={showError}\n          />\n\n          <TodoList\n            todos={filteredTodos}\n            tempTodo={tempTodo}\n            changeTodo={changeTodo}\n            todosIdInLoading={todosIdInLoading}\n            deleteTodo={deleteTodo}\n          />\n\n          {!!todos.length && (\n            <TodosFilter\n              status={filterStatus}\n              onChangeStatus={setFilterStatus}\n              todos={todos}\n              deleteTodo={deleteTodo}\n            />\n          )}\n        </div>\n      )}\n\n      <div className={classNames(\n        'notification is-danger is-light has-text-weight-normal',\n        { hidden: !errorMessage },\n      )}\n      >\n        <button\n          type=\"button\"\n          aria-label=\"Close error message\"\n          className=\"delete\"\n          onClick={() => setErrorMessage('')}\n        />\n        {errorMessage}\n      </div>\n    </div>\n  );\n};\n","import { User } from '../types/User';\n\nexport function getUser(): User {\n  const data = localStorage.getItem('user');\n  const defaultData = {\n    id: 0,\n  };\n\n  if (data === null) {\n    return defaultData;\n  }\n\n  try {\n    return JSON.parse(data);\n  } catch {\n    return defaultData;\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/index.scss';\n\nimport { App } from './App';\n\nconst root = document.getElementById('root');\n\nrender(<App />, root);\n"],"sourceRoot":""}